<<<<<<< HEAD
drop table user_tb;
drop sequence MESSAGE_TB_SEQ;


/
CREATE TABLE USER_TB ( 
	NICKNAME VARCHAR2(50) NOT NULL, 
	EMAIL VARCHAR2(400) NOT NULL, 
	ADDRESS1 VARCHAR2(400) NOT NULL, 
	ADDRESS2 VARCHAR2(400) NOT NULL, 
	ZIPCODE NUMBER NOT NULL, 
	SNS VARCHAR2(400) NOT NULL, 
	SNS_ID VARCHAR2(400) NOT NULL, 
	HOME_LAT VARCHAR2(200) NOT NULL, 
	HOME_LON VARCHAR2(200) NOT NULL, 
	FROMBUYER VARCHAR2(20) NOT NULL, 
	FROMSELLER VARCHAR2(20) NOT NULL, 
	BUYCNT NUMBER NOT NULL, 
	SELLCNT NUMBER NOT NULL, 
	CONSTRAINT USER_TB_PK PRIMARY KEY (NICKNAME), 
	CONSTRAINT EMAIL_UNIQUE UNIQUE(EMAIL) 
	); 
	
CREATE SEQUENCE USER_TB_SEQ START WITH 1 INCREMENT BY 1;





/

CREATE OR REPLACE TRIGGER USER_TB_AI_TRG
BEFORE INSERT ON USER_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT USER_TB_SEQ.NEXTVAL
    INTO: NEW.USR_SEQ
    FROM DUAL;
END;
/

--DROP TRIGGER USER_TB_AI_TRG;
/

--DROP SEQUENCE USER_TB_SEQ;
/

CREATE TABLE MESSAGE_TB
(
    MSG_SEQ             NUMBER            NOT NULL, 
    MSG_TITLE			VARCHAR2(50)      NOT NULL,
    MSG_CONTENT         VARCHAR2(2000)    NOT NULL, 
    SENDER              VARCHAR2(50)      NOT NULL, 
    RECEIVER            VARCHAR2(50)      NOT NULL, 
    RECEIVER_CHK        NUMBER            NOT NULL, 
    SENDER_DEL_CHK      NUMBER            NOT NULL, 
    RECEIVER_DEL_CHK    NUMBER            NOT NULL, 
    SEND_DATE           DATE              NOT NULL, 
    CONSTRAINT MESSAGE_TB_PK PRIMARY KEY (MSG_SEQ)
)
/

CREATE SEQUENCE MESSAGE_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER MESSAGE_TB_AI_TRG
BEFORE INSERT ON MESSAGE_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT MESSAGE_TB_SEQ.NEXTVAL
    INTO: NEW.MSG_SEQ
    FROM DUAL;
END;
/

--DROP TRIGGER MESSAGE_TB_AI_TRG;
/

--DROP SEQUENCE MESSAGE_TB_SEQ;
/

COMMENT ON TABLE MESSAGE_TB IS '쪽지'
/

COMMENT ON COLUMN MESSAGE_TB.MSG_SEQ IS '글번호'
/

COMMENT ON COLUMN MESSAGE_TB.MSG_CONTENT IS '내용'
/

COMMENT ON COLUMN MESSAGE_TB.SENDER IS '보내는사람'
/

COMMENT ON COLUMN MESSAGE_TB.RECEIVER IS '받는사람'
/

COMMENT ON COLUMN MESSAGE_TB.RECIEVER_CHK IS '받는사람조회여부'
/

COMMENT ON COLUMN MESSAGE_TB.SENDER_DEL_CHK IS '보내는사람삭제여부'
/

COMMENT ON COLUMN MESSAGE_TB.RECEIVER_DEL_CHK IS '받는사람삭제여부'
/

COMMENT ON COLUMN MESSAGE_TB.SEND_DATE IS '작성날짜시간'
/

ALTER TABLE MESSAGE_TB
    ADD CONSTRAINT FK_MESSAGE_TB_SENDER_USER_TB_U FOREIGN KEY (SENDER)
        REFERENCES USER_TB (USR_SEQ)
/

ALTER TABLE MESSAGE_TB
    ADD CONSTRAINT FK_MESSAGE_TB_RECEIVER_USER_TB FOREIGN KEY (RECEIVER)
        REFERENCES USER_TB (USR_SEQ)
/




CREATE TABLE SELL_BOARD_TB
(
    SELL_SEQ        NUMBER            NOT NULL, 
    SELLER          NUMBER            NULL, 
    TRADE_LAT       NUMBER            NULL, 
    TRADE_LON       NUMBER            NULL, 
    SELL_CONTENT    VARCHAR2(4000)    NULL, 
    STATUS          VARCHAR2(20)      NULL, 
    TITLE           VARCHAR2(200)     NULL, 
    REG_DATE        DATE              NULL, 
    CONSTRAINT SELL_BOARD_TB_PK PRIMARY KEY (SELL_SEQ)
)
/

CREATE SEQUENCE SELL_BOARD_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER SELL_BOARD_TB_AI_TRG
BEFORE INSERT ON SELL_BOARD_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT SELL_BOARD_TB_SEQ.NEXTVAL
    INTO: NEW.SELL_SEQ
    FROM DUAL;
END;
/

--DROP TRIGGER SELL_BOARD_TB_AI_TRG;
/

--DROP SEQUENCE SELL_BOARD_TB_SEQ;
/

COMMENT ON COLUMN SELL_BOARD_TB.SELL_SEQ IS '매물번호'
/

COMMENT ON COLUMN SELL_BOARD_TB.SELLER IS '판매자'
/

COMMENT ON COLUMN SELL_BOARD_TB.TRADE_LAT IS '매매위치위도'
/

COMMENT ON COLUMN SELL_BOARD_TB.TRADE_LON IS '매매위치경도'
/

COMMENT ON COLUMN SELL_BOARD_TB.SELL_CONTENT IS '판매글'
/

COMMENT ON COLUMN SELL_BOARD_TB.STATUS IS '거래상태'
/

COMMENT ON COLUMN SELL_BOARD_TB.TITLE IS '제목'
/

COMMENT ON COLUMN SELL_BOARD_TB.REG_DATE IS '등록시간'
/



CREATE TABLE FILE_TB
(
    FILE_SEQ     NUMBER           NOT NULL, 
    SELL_NUM     NUMBER           NULL, 
    FILE_PATH    VARCHAR2(400)    NULL, 
    FILE_NAME    VARCHAR2(400)    NULL, 
    CONSTRAINT FILE_TB_PK PRIMARY KEY (FILE_SEQ)
)
/

CREATE SEQUENCE FILE_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER FILE_TB_AI_TRG
BEFORE INSERT ON FILE_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT FILE_TB_SEQ.NEXTVAL
    INTO: NEW.FILE_SEQ
    FROM DUAL;
END;
/

--DROP TRIGGER FILE_TB_AI_TRG;
/

--DROP SEQUENCE FILE_TB_SEQ;
/

COMMENT ON TABLE FILE_TB IS 'FILES'
/

COMMENT ON COLUMN FILE_TB.FILE_SEQ IS '파일번호'
/

COMMENT ON COLUMN FILE_TB.SELL_NUM IS '매물번호'
/

COMMENT ON COLUMN FILE_TB.FILE_PATH IS '파일위치'
/

COMMENT ON COLUMN FILE_TB.FILE_NAME IS '파일이름'
/

ALTER TABLE FILE_TB
    ADD CONSTRAINT FK_FILE_TB_SELL_NUM_SELL_BOARD FOREIGN KEY (SELL_NUM)
        REFERENCES SELL_BOARD_TB (SELL_SEQ)
/




CREATE TABLE SELL_BOARD_REPLY_TB
(
    SB_REPLY_SEQ    NUMBER            NOT NULL, 
    SB_GROUP_NUM     NUMBER            NOT NULL, 
    SB_GROUP_SEQ      NUMBER            NOT NULL, 
    SB_TITLE_TAB     NUMBER            NOT NULL, 
    SB_CONTENT      VARCHAR2(4000)    NOT NULL, 
    SB_WRITER       VARCHAR2(1000)    NOT NULL, 
    REG_DATE        DATE              NOT NULL, 
    SELL_NUM        NUMBER            NOT NULL, 
    CONSTRAINT SELL_BOARD_REPLY_TB_PK PRIMARY KEY (SB_REPLY_SEQ)
)
/

CREATE SEQUENCE SELL_BOARD_REPLY_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER SELL_BOARD_REPLY_TB_AI_TRG
BEFORE INSERT ON SELL_BOARD_REPLY_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT SELL_BOARD_REPLY_TB_SEQ.NEXTVAL
    INTO: NEW.SB_REPLY_SEQ
    FROM DUAL;
END;
/

--DROP TRIGGER SELL_BOARD_REPLY_TB_AI_TRG;
/

--DROP SEQUENCE SELL_BOARD_REPLY_TB_SEQ;
/

COMMENT ON COLUMN SELL_BOARD_REPLY_TB.SB_REPLY_SEQ IS '판매글 댓글번호'
/

COMMENT ON COLUMN SELL_BOARD_REPLY_TB.SB_GROUPNUM IS '그룹넘버'
/

COMMENT ON COLUMN SELL_BOARD_REPLY_TB.SB_GROUPSQ IS '그룹시퀀스'
/

COMMENT ON COLUMN SELL_BOARD_REPLY_TB.SB_TITLETAB IS '칸띄움'
/

COMMENT ON COLUMN SELL_BOARD_REPLY_TB.SB_CONTENT IS '댓글내용'
/

COMMENT ON COLUMN SELL_BOARD_REPLY_TB.SB_WRITER IS '글쓴이'
/

COMMENT ON COLUMN SELL_BOARD_REPLY_TB.REG_DATE IS '입력일'
/

COMMENT ON COLUMN SELL_BOARD_REPLY_TB.SELL_NUM IS '매물번호'
/

ALTER TABLE SELL_BOARD_REPLY_TB
    ADD CONSTRAINT FK_SELL_BOARD_REPLY_TB_SELL_NU FOREIGN KEY (SELL_NUM)
        REFERENCES SELL_BOARD_TB (SELL_SEQ)
/




CREATE TABLE DEAL_TB
(
    DEAL_SEQ      NUMBER    NOT NULL, 
    SELNUM        NUMBER    NOT NULL, 
    SELLER        NUMBER    NOT NULL, 
    BUYER         NUMBER    NOT NULL, 
    START_DATE    DATE      NOT NULL, 
    END_DATE      DATE      NOT NULL, 
    CONSTRAINT DEAL_TB_PK PRIMARY KEY (DEAL_SEQ)
)
/

CREATE SEQUENCE DEAL_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER DEAL_TB_AI_TRG
BEFORE INSERT ON DEAL_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT DEAL_TB_SEQ.NEXTVAL
    INTO: NEW.DEAL_SEQ
    FROM DUAL;
END;
/

--DROP TRIGGER DEAL_TB_AI_TRG;
/

--DROP SEQUENCE DEAL_TB_SEQ;
/

COMMENT ON TABLE DEAL_TB IS '거래테이블'
/

COMMENT ON COLUMN DEAL_TB.DEAL_SEQ IS '거래번호'
/

COMMENT ON COLUMN DEAL_TB.SELNUM IS '매물번호'
/

COMMENT ON COLUMN DEAL_TB.SELLER IS '판매자'
/

COMMENT ON COLUMN DEAL_TB.BUYER IS '구매자'
/

COMMENT ON COLUMN DEAL_TB.START_DATE IS '거래시작일시'
/

COMMENT ON COLUMN DEAL_TB.END_DATE IS '거래종료일시'
/

ALTER TABLE DEAL_TB
    ADD CONSTRAINT FK_DEAL_TB_SELNUM_SELL_BOARD_T FOREIGN KEY (SELNUM)
        REFERENCES SELL_BOARD_TB (SELL_SEQ)
/

ALTER TABLE DEAL_TB
    ADD CONSTRAINT FK_DEAL_TB_SELLER_USER_TB_USR_ FOREIGN KEY (SELLER)
        REFERENCES USER_TB (USR_SEQ)
/

ALTER TABLE DEAL_TB
    ADD CONSTRAINT FK_DEAL_TB_BUYER_USER_TB_USR_S FOREIGN KEY (BUYER)
        REFERENCES USER_TB (USR_SEQ)
/




CREATE TABLE FREE_BOARD_TB
(
    FREE_SEQ           NUMBER            NOT NULL, 
    TITLE              VARCHAR2(400)     NOT NULL, 
    CONTENT            VARCHAR2(4000)    NOT NULL, 
    SAW                NUMBER            NOT NULL, 
    RECOMMEND          NUMBER            NOT NULL, 
    GROUP_NUM          NUMBER            NOT NULL, 
    GROUP_ORDER_NUM    NUMBER            NOT NULL, 
    TITLE_TAB          NUMBER            NOT NULL, 
    WRITER             NUMBER            NOT NULL, 
    REG_DATE           DATE              NULL, 
    CONSTRAINT FREE_BOARD_TB_PK PRIMARY KEY (FREE_SEQ)
)
/

CREATE SEQUENCE FREE_BOARD_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER FREE_BOARD_TB_AI_TRG
BEFORE INSERT ON FREE_BOARD_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT FREE_BOARD_TB_SEQ.NEXTVAL
    INTO: NEW.FREE_SEQ
    FROM DUAL;
END;
/

--DROP TRIGGER FREE_BOARD_TB_AI_TRG;
/

--DROP SEQUENCE FREE_BOARD_TB_SEQ;
/

CREATE OR REPLACE TRIGGER FREE_BOARD_TB_AI_TRG
BEFORE INSERT ON FREE_BOARD_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT FREE_BOARD_TB_SEQ.NEXTVAL
    INTO: NEW.GROUP_NUM
    FROM DUAL;
END;
/

--DROP TRIGGER FREE_BOARD_TB_AI_TRG;
/

--DROP SEQUENCE FREE_BOARD_TB_SEQ;
/

COMMENT ON TABLE FREE_BOARD_TB IS '자유게시판'
/

COMMENT ON COLUMN FREE_BOARD_TB.FREE_SEQ IS '자유글번호'
/

COMMENT ON COLUMN FREE_BOARD_TB.TITLE IS '제목'
/

COMMENT ON COLUMN FREE_BOARD_TB.CONTENT IS '내용'
/

COMMENT ON COLUMN FREE_BOARD_TB.SAW IS '조회수'
/

COMMENT ON COLUMN FREE_BOARD_TB.RECOMMEND IS '추천'
/

COMMENT ON COLUMN FREE_BOARD_TB.GROUP_NUM IS '글그룹번호'
/

COMMENT ON COLUMN FREE_BOARD_TB.GROUP_ORDER_NUM IS '글그룹별순서'
/

COMMENT ON COLUMN FREE_BOARD_TB.TITLE_TAB IS '들여쓰기단계'
/

COMMENT ON COLUMN FREE_BOARD_TB.WRITER IS '게시자'
/

COMMENT ON COLUMN FREE_BOARD_TB.REG_DATE IS '등록일'
/

ALTER TABLE FREE_BOARD_TB
    ADD CONSTRAINT FK_FREE_BOARD_TB_WRITER_USER_T FOREIGN KEY (WRITER)
        REFERENCES USER_TB (USR_SEQ)
/



CREATE TABLE FREE_BOARD_REPLY_TB
(
    FB_REPLY_SEQ    NUMBER            NOT NULL, 
    FB_GROUP_NUM    NUMBER            NOT NULL, 
    FB_GROUP_SEQ    NUMBER            NOT NULL, 
    FB_TITLE_TAB    NUMBER            NOT NULL, 
    FB_CONTENT      VARCHAR2(4000)    NOT NULL, 
    FB_WRITER       VARCHAR2(1000)    NOT NULL, 
    REG_DATE        DATE              NOT NULL, 
    FREE_SEQ        NUMBER            NOT NULL, 
    CONSTRAINT FREE_BOARD_REPLY_TB_PK PRIMARY KEY (FB_REPLY_SEQ)
)
/

CREATE SEQUENCE FREE_BOARD_REPLY_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER FREE_BOARD_REPLY_TB_AI_TRG
BEFORE INSERT ON FREE_BOARD_REPLY_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT FREE_BOARD_REPLY_TB_SEQ.NEXTVAL
    INTO: NEW.FB_REPLY_SEQ
    FROM DUAL;
END;
/

--DROP TRIGGER FREE_BOARD_REPLY_TB_AI_TRG;
/

--DROP SEQUENCE FREE_BOARD_REPLY_TB_SEQ;
/

COMMENT ON COLUMN FREE_BOARD_REPLY_TB.FB_REPLY_SEQ IS '자게댓글번호'
/

COMMENT ON COLUMN FREE_BOARD_REPLY_TB.FB_GROUP_NUM IS '그룹'
/

COMMENT ON COLUMN FREE_BOARD_REPLY_TB.FB_GROUP_SEQ IS '그룹시퀀스'
/

COMMENT ON COLUMN FREE_BOARD_REPLY_TB.FB_TITLE_TAB IS '칸띄움'
/

COMMENT ON COLUMN FREE_BOARD_REPLY_TB.FB_CONTENT IS '댓글내용'
/

COMMENT ON COLUMN FREE_BOARD_REPLY_TB.FB_WRITER IS '글쓴이'
/

COMMENT ON COLUMN FREE_BOARD_REPLY_TB.REG_DATE IS '입력일'
/

COMMENT ON COLUMN FREE_BOARD_REPLY_TB.FREE_SEQ IS '자유글번호'
/

ALTER TABLE FREE_BOARD_REPLY_TB
    ADD CONSTRAINT FK_FREE_BOARD_REPLY_TB_FREE_SE FOREIGN KEY (FREE_SEQ)
        REFERENCES FREE_BOARD_TB (FREE_SEQ)
/




CREATE TABLE NOTICE_BOARD_TB
(
    NOTICE_SEQ    NUMBER            NOT NULL, 
    ADMIN_ID      VARCHAR2(200)     NULL, 
    TITLE         VARCHAR2(20)      NULL, 
    CONTENT       VARCHAR2(4000)    NULL, 
    SAW           NUMBER            NULL, 
    REG_DATE      DATE              NULL, 
    CONSTRAINT NOTICE_BOARD_TB_PK PRIMARY KEY (NOTICE_SEQ)
)
/

CREATE SEQUENCE NOTICE_BOARD_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER NOTICE_BOARD_TB_AI_TRG
BEFORE INSERT ON NOTICE_BOARD_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT NOTICE_BOARD_TB_SEQ.NEXTVAL
    INTO: NEW.NOTICE_SEQ
    FROM DUAL;
END;
/

--DROP TRIGGER NOTICE_BOARD_TB_AI_TRG;
/

--DROP SEQUENCE NOTICE_BOARD_TB_SEQ;
/

COMMENT ON TABLE NOTICE_BOARD_TB IS '공지게시판'
/

COMMENT ON COLUMN NOTICE_BOARD_TB.NOTICE_SEQ IS '글번호'
/

COMMENT ON COLUMN NOTICE_BOARD_TB.ADMIN_ID IS '작성자'
/

COMMENT ON COLUMN NOTICE_BOARD_TB.TITLE IS '제목'
/

COMMENT ON COLUMN NOTICE_BOARD_TB.CONTENT IS '내용'
/

COMMENT ON COLUMN NOTICE_BOARD_TB.SAW IS '조회수'
/

COMMENT ON COLUMN NOTICE_BOARD_TB.REG_DATE IS '등록일'
/

ALTER TABLE NOTICE_BOARD_TB
    ADD CONSTRAINT FK_NOTICE_BOARD_TB_ADMIN_ID_AD FOREIGN KEY (ADMIN_ID)
        REFERENCES ADMIN_TB (ADMIN_ID)
/




CREATE TABLE ADMIN_TB
(
    ADMIN_ID      VARCHAR2(200)    NOT NULL, 
    ADMIN_PW      VARCHAR2(200)    NOT NULL, 
    SESSION_ID    VARCHAR2(200)    NOT NULL, 
    ONLINE        VARCHAR2(200)    NOT NULL, 
    CONSTRAINT ADMIN_TB_PK PRIMARY KEY (ADMIN_ID)
)
/

COMMENT ON COLUMN ADMIN_TB.ADMIN_ID IS '관리자아이디'
/

COMMENT ON COLUMN ADMIN_TB.ADMIN_PW IS '관리자비밀번호'
/

COMMENT ON COLUMN ADMIN_TB.SESSION_ID IS '세션ID'
/

COMMENT ON COLUMN ADMIN_TB.ONLINE IS '온라인'
/



